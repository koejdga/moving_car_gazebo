<?xml version="1.0" ?>
<sdf version="1.9">
  <world name="iris_runway">
    <physics name="1ms" type="ignore">
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1.0</real_time_factor>
    </physics>

    <plugin filename="gz-sim-physics-system" name="gz::sim::systems::Physics">
    </plugin>
    <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
      <render_engine>ogre2</render_engine>
    </plugin>
    <plugin filename="gz-sim-user-commands-system" name="gz::sim::systems::UserCommands">
    </plugin>
    <plugin filename="gz-sim-scene-broadcaster-system" name="gz::sim::systems::SceneBroadcaster">
    </plugin>
    <plugin filename="gz-sim-imu-system" name="gz::sim::systems::Imu">
    </plugin>
    <plugin filename="gz-sim-navsat-system" name="gz::sim::systems::NavSat">
    </plugin>

    <scene>
      <ambient>1.0 1.0 1.0</ambient>
      <background>0.8 0.8 0.8</background>
      <sky></sky>
    </scene>

    <light type="directional" name="sun">
      <cast_shadows>true</cast_shadows>
      <pose>0 0 10 0 0 0</pose>
      <diffuse>0.8 0.8 0.8 1</diffuse>
      <specular>0.8 0.8 0.8 1</specular>
      <attenuation>
        <range>1000</range>
        <constant>0.9</constant>
        <linear>0.01</linear>
        <quadratic>0.001</quadratic>
      </attenuation>
      <direction>-0.5 0.1 -0.9</direction>
    </light>

    <model name="axes">
      <static>1</static>
      <link name="link">
        <visual name="r">
          <cast_shadows>0</cast_shadows>
          <pose>5 0 0.1 0 0 0</pose>
          <geometry>
            <box>
              <size>10 0.01 0.01</size>
            </box>
          </geometry>
          <material>
            <ambient>1 0 0 0.8</ambient>
            <diffuse>1 0 0 0.8</diffuse>
            <emissive>1 0 0 0.8</emissive>
            <specular>0.5 0.5 0.5 0.8</specular>
          </material>
        </visual>
        <visual name="g">
          <cast_shadows>0</cast_shadows>
          <pose>0 5 0.1 0 0 0</pose>
          <geometry>
            <box>
              <size>0.01 10 0.01</size>
            </box>
          </geometry>
          <material>
            <ambient>0 1 0 0.8</ambient>
            <diffuse>0 1 0 0.8</diffuse>
            <emissive>0 1 0 0.8</emissive>
            <specular>0.5 0.5 0.5 0.8</specular>
          </material>
        </visual>
        <visual name="b">
          <cast_shadows>0</cast_shadows>
          <pose>0 0 5.1 0 0 0</pose>
          <geometry>
            <box>
              <size>0.01 0.01 10</size>
            </box>
          </geometry>
          <material>
            <ambient>0 0 1 0.8</ambient>
            <diffuse>0 0 1 0.8</diffuse>
            <emissive>0 0 1 0.8</emissive>
            <specular>0.5 0.5 0.5 0.8</specular>
          </material>
        </visual>
        <sensor name="navsat_sensor" type="navsat">
          <always_on>1</always_on>
          <update_rate>1</update_rate>
        </sensor>
      </link>
    </model>

    <include>
      <uri>model://runway</uri>
      <pose degrees="true">-129 545 0 0 0 363</pose>
    </include>

    <include>
      <uri>model://iris_with_gimbal</uri>
      <pose degrees="true">-4.5 0 0.195 0 0 90</pose>
    </include>

    <model name='vehicle_blue' canonical_link='chassis'>
      <pose relative_to='world'>5 0 0 0 0 0</pose>      <!--the pose is relative to the world by default-->

      <link name='chassis'>
        <pose relative_to='__model__'>0.5 0 0.4 0 0 0</pose>
        <inertial>          <!--inertial properties of the link mass, inertia matix-->
          <mass>1.14395</mass>
          <inertia>
            <ixx>0.126164</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.416519</iyy>
            <iyz>0</iyz>
            <izz>0.481014</izz>
          </inertia>
        </inertial>

        <visual name='visual'>
          <cast_shadows>false</cast_shadows>
          <geometry>
            <mesh>
              <uri>model://Car.dae</uri>
            </mesh>
          </geometry>
          <pose relative_to='__model__'>0 0 0 0 0 1.5708</pose>
        </visual>
        <collision name='collision'>          <!--todo: describe why we need the collision-->
          <geometry>
            <box>
              <size>3.0 1.0 0.5</size>
            </box>
          </geometry>
        </collision>
      </link>

      <!--let's build the left wheel-->
      <link name='left_wheel'>
        <pose relative_to="chassis">-0.5 0.6 0 -1.5707 0 0</pose>        <!--angles are in radian-->
        <inertial>
          <mass>2</mass>
          <inertia>
            <ixx>0.145833</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.145833</iyy>
            <iyz>0</iyz>
            <izz>0.125</izz>
          </inertia>
        </inertial>
        <collision name='collision'>
          <geometry>
            <cylinder>
              <radius>0.4</radius>
              <length>0.2</length>
            </cylinder>
          </geometry>
        </collision>
      </link>

      <!--copy and paste for right wheel but change position-->
      <link name='right_wheel'>
        <pose relative_to="chassis">-0.5 -0.6 0 -1.5707 0 0</pose>        <!--angles are in radian-->
        <inertial>
          <mass>1</mass>
          <inertia>
            <ixx>0.145833</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.145833</iyy>
            <iyz>0</iyz>
            <izz>0.125</izz>
          </inertia>
        </inertial>
        <collision name='collision'>
          <geometry>
            <cylinder>
              <radius>0.4</radius>
              <length>0.2</length>
            </cylinder>
          </geometry>
        </collision>
      </link>

      <frame name="caster_frame" attached_to='chassis'>
        <pose>0.8 0 -0.2 0 0 0</pose>
      </frame>

      <!--caster wheel-->
      <link name='caster'>
        <pose relative_to='caster_frame'/>
        <inertial>
          <mass>1</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>
        <collision name='collision'>
          <geometry>
            <sphere>
              <radius>0.2</radius>
            </sphere>
          </geometry>
        </collision>
      </link>


      <!--connecting these links together using joints-->
      <joint name='left_wheel_joint' type='revolute'>        <!--continous joint is not supported yet-->
        <pose relative_to='left_wheel'/>
        <parent>chassis</parent>
        <child>left_wheel</child>
        <axis>
          <xyz expressed_in='__model__'>0 1 0</xyz>          <!--can be defined as any frame or even arbitrary frames-->
          <limit>
            <lower>-1.79769e+308</lower>            <!--negative infinity-->
            <upper>1.79769e+308</upper>            <!--positive infinity-->
          </limit>
        </axis>
      </joint>

      <joint name='right_wheel_joint' type='revolute'>
        <pose relative_to='right_wheel'/>
        <parent>chassis</parent>
        <child>right_wheel</child>
        <axis>
          <xyz expressed_in='__model__'>0 1 0</xyz>
          <limit>
            <lower>-1.79769e+308</lower>            <!--negative infinity-->
            <upper>1.79769e+308</upper>            <!--positive infinity-->
          </limit>
        </axis>
      </joint>

      <!--different type of joints ball joint-->      <!--defult value is the child-->
      <joint name='caster_wheel' type='ball'>
        <parent>chassis</parent>
        <child>caster</child>
      </joint>

      <!--diff drive plugin-->
      <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <wheel_separation>1.2</wheel_separation>
        <wheel_radius>0.4</wheel_radius>
        <odom_publish_frequency>1</odom_publish_frequency>
        <topic>cmd_vel</topic>
      </plugin>
    </model>

    <!-- Start Movement -->
    <plugin filename="gz-sim-triggered-publisher-system" name="gz::sim::systems::TriggeredPublisher">
      <input type="gz.msgs.Int32" topic="/keyboard/keypress">
        <match field="data">82</match>        <!-- press R -->
      </input>
      <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 2}, angular: {z: 0.4}
      </output>
    </plugin>

    <!-- Stop Movement -->
    <plugin filename="gz-sim-triggered-publisher-system" name="gz::sim::systems::TriggeredPublisher">
      <input type="gz.msgs.Int32" topic="/keyboard/keypress">
        <match field="data">83</match>        <!-- press S -->
      </input>
      <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0}, angular: {z: 0}
      </output>
    </plugin>

  </world>
</sdf>
